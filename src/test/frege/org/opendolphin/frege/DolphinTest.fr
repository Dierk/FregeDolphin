module org.opendolphin.frege.DolphinTest where

import org.opendolphin.frege.Dolphin

import Test.QuickCheck

dummy = once true

initialQualifier  = "initial qualifier"
noSuchQualifier   = "no such qualifier"
modifiedQualifier = "modified qualifier"
zero              = Just $ IntVal 0 0

startDolphin = Dolphin empty empty empty empty

-- create one PM with one Attribute and fixed value and qualifier at the provided key
onePmAttrDolphin ∷ Int → Dolphin 
onePmAttrDolphin key = with startDolphin do 
    qual = Just initialQualifier
    attr = Attr "PM_KEY" "myPropName" Value zero qual
    addAttribute (toLongIndex key) attr
    
valueByAttrId :: Dolphin -> Int -> AttributeValue      
valueByAttrId dolphin key = dolphin.attrById.lookup (toLongIndex key) >>= _.value       
    
foundByQualifier    = property $ \key -> 
    findAttrIdsByQualifier (onePmAttrDolphin key) initialQualifier    == [toLongIndex key]

notFoundByQualifier = property $ \key -> 
    findAttrIdsByQualifier (onePmAttrDolphin key) noSuchQualifier == []

dolphinWithUpdatedQualifier key = with (onePmAttrDolphin key) do
    modifyQualifier (toLongIndex key) (Just modifiedQualifier)

foundByModifiedQualifier = property $ \key -> 
    findAttrIdsByQualifier (dolphinWithUpdatedQualifier key) modifiedQualifier == [toLongIndex key]
    
noMoreOldQualifierAfterModification = property $ \key ->     
    findAttrIdsByQualifier (dolphinWithUpdatedQualifier key) initialQualifier == []
   
    
originalValue  = property isZero where
    isZero key = valueByAttrId (onePmAttrDolphin key) key == zero

modifiedValue = property newValue where
    newValue key value = valueByAttrId (updated key value) key == Just (IntVal 0 value)
    updated  key value = with (onePmAttrDolphin key) do
	    modifyValue (toLongIndex key) (Just (IntVal 1 value))

modifiedBaseValue = property newBase where
    newBase key value = valueByAttrId (updated key value) key == Just (IntVal value 0)
    updated key value = with (onePmAttrDolphin key) do
        modifyBaseValue (toLongIndex key) (Just (IntVal value 1))
                